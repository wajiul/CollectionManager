@model ItemModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>ItemModel</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <input asp-for="CollectionId" value="@Model.CollectionId" hidden />

            <div class="form-group">
                <label asp-for="Tags" class="control-label"></label>
                <input asp-for="Tags" id="tags-input" class="form-control" />
                <span asp-validation-for="Tags" class="text-danger"></span>
            </div>

            @for (int i = 0; i < Model.FieldValues.Count; i++)
            {
                var field = Model.FieldValues[i];   
                <div class="form-group">
                    <label class="control-label">@field.Name</label>

                    <input asp-for="@Model.FieldValues[i].Id" value="@Model.FieldValues[i].Id" hidden/>
                    <input asp-for="@Model.FieldValues[i].ItemId" value="@Model.FieldValues[i].ItemId" hidden/>

                    @if (field.Type == CustomFieldType.Integer)
                    {
                        <input asp-for="@Model.FieldValues[i].Value" type="number" class="form-control" />
                    }
                    else if (field.Type == CustomFieldType.String)
                    {
                        <input asp-for="@Model.FieldValues[i].Value" type="text" class="form-control" />
                    }
                    else if (field.Type == CustomFieldType.MultilineText)
                    {
                        <textarea asp-for="@Model.FieldValues[i].Value" class="form-control"></textarea>
                    }
                    else if (field.Type == CustomFieldType.Boolean)
                    {
                        <input asp-for="@Model.FieldValues[i].Value" type="checkbox" class="form-control" />
                    }
                    else if (field.Type == CustomFieldType.Date)
                    {
                        <input asp-for="@Model.FieldValues[i].Value" type="date" class="form-control" />
                    }
                </div>
            }
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="https://cdnjs.cloudflare.com/ajax/libs/tagify/4.0.3/tagify.min.js"></script>

    <script>
        $(document).ready(function () {
            var tagList = [];

            function initTagify() {
                var input = document.getElementById('tags-input');
                var tagify = new Tagify(input, {
                    whitelist: tagList,
                    dropdown: {
                        maxItems: 20,           
                        classname: "tags-look", 
                        enabled: 0,            
                        closeOnSelect: false
                    }
                });
            }

            function getTags() {
                $.ajax({
                    url: '/tags',
                    contentType: 'application/json',
                    method: 'GET',
                    success: function (response) {
                        tagList = response;
                        initTagify();

                    }
                });
            }

            getTags();
        });
    </script>
}
