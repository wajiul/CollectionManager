@model ItemModel

@{
    ViewData["Title"] = "Edith";
}

<div class="row justify-content-center">
    <div class="col-lg-8">
        <div class="card shadow">
            <div class="card-header bg-primary text-white">
                <h1 class="text-center">@Resource.Edit @Resource.Item</h1>
            </div>
            <div class="card-body">
                <div class="row justify-content-center">
                    <div class="col-md-10">
                        <form asp-action="Edit" asp-route-id="@Model.Id" method="post">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                            <input asp-for="Id" value="@Model.Id" hidden />
                            <input asp-for="CollectionId" value="@Model.CollectionId" hidden />

                            <div class="form-group mb-2">
                                <label asp-for="Name" class="control-label"></label>
                                <input asp-for="Name" class="form-control" value="@Model.Name" />
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-2">
                                <label asp-for="Tags" class="control-label"></label>
                                <input asp-for="Tags" id="tags-input" class="form-control" value="@Model.Tags" />
                                <span asp-validation-for="Tags" class="text-danger"></span>
                            </div>

                            @for (int i = 0; i < Model.FieldValues.Count; i++)
                            {
                                var field = Model.FieldValues[i];
                                <div class="form-group mb-2">
                                    <label class="control-label">@field.Name</label>

                                    <input asp-for="@Model.FieldValues[i].Id" value="@Model.FieldValues[i].Id" hidden />
                                    <input asp-for="@Model.FieldValues[i].ItemId" value="@Model.FieldValues[i].ItemId" hidden />

                                    @if (field.Type == CustomFieldType.Integer)
                                    {
                                        <input asp-for="@Model.FieldValues[i].Value" type="number" class="form-control" value="@Model.FieldValues[i].Value" />
                                    }
                                    else if (field.Type == CustomFieldType.String)
                                    {
                                        <input asp-for="@Model.FieldValues[i].Value" type="text" class="form-control" value="@Model.FieldValues[i].Value" />
                                    }
                                    else if (field.Type == CustomFieldType.MultilineText)
                                    {
                                        <textarea asp-for="@Model.FieldValues[i].Value" class="form-control" value="@Model.FieldValues[i].Value"></textarea>
                                    }
                                    else if (field.Type == CustomFieldType.Boolean)
                                    {
                                        bool isChecked= false;
                                        if (Model.FieldValues[i].Value.ToLower() == "on")
                                        {
                                            isChecked = true;
                                        }
                                        <input type="checkbox"
                                               class="form-check-input ms-2"
                                               name="FieldValues[@i].Value"
                                        @(isChecked ? "checked": "") />
                                    }
                                    else if (field.Type == CustomFieldType.Date)
                                    {
                                        <input asp-for="@Model.FieldValues[i].Value" type="date" class="form-control" value="@Model.FieldValues[i].Value" />
                                    }
                                </div>
                            }
                            <div class="d-flex flex-column flex-sm-row gap-1 justify-content-center align-items-center mt-3">
                                <button type="submit" class="btn btn-primary w-50">@Resource.Submit</button>
                                <a asp-action="Index"
                                   asp-controller="ProfileCollectionItems"
                                   asp-route-collectionId="@Model.CollectionId"
                                   class="btn btn-dark w-50">@Resource.BackToList</a>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="https://cdnjs.cloudflare.com/ajax/libs/tagify/4.0.3/tagify.min.js"></script>

    <script>
        $(document).ready(function () {
            var tagList = [];

            function initTagify() {
                var input = document.getElementById('tags-input');
                var tagify = new Tagify(input, {
                    whitelist: tagList,
                    dropdown: {
                        maxItems: 20,
                        classname: "tags-look",
                        enabled: 0,
                        closeOnSelect: false
                    }
                });
            }

            function getTags() {
                $.ajax({
                    url: '/tags',
                    contentType: 'application/json',
                    method: 'GET',
                    success: function (response) {
                        tagList = response;
                        initTagify();

                    }
                });
            }

            getTags();
        });
    </script>
}
